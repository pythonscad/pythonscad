name: Windows(MSVC) Tests

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false
jobs:
  build-and-test:
    name: windows-latest msvc
    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        build_type: [Release]
        include:
          - build_type: Release
            cmake_preset: windows-msvc-release

    env:
      Qt5_DIR: ${{ github.workspace }}\Qt\5.15.2\msvc2019_64

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
        with:
          submodules: 'recursive'

      - name: Setup (detached) tmate session if enabled
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 3
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
        with:
          detached: true

      - name: Setup Visual Studio Environment
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: Install Qt5
        uses: jurplel/install-qt-action@v3
        with:
          version: '5.15.2'
          host: 'windows'
          target: 'desktop'
          arch: 'win64_msvc2019_64'
          cache: true

      - name: Setup vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg.git C:\vcpkg
          cd C:\vcpkg
          git checkout 74e6536215718009aae747d86d84b78376bf9e09
          bootstrap-vcpkg.bat
        shell: cmd

      - name: Install Dependencies
        run: |
          choco install winflexbison3 -y
          ren vcpkg.json vcpkg.json.bak
          C:\vcpkg\vcpkg.exe install cgal:x64-windows eigen3:x64-windows boost-program-options:x64-windows boost-regex:x64-windows glew:x64-windows libzip:x64-windows curl:x64-windows opencsg:x64-windows
          ren vcpkg.json.bak vcpkg.json
        shell: cmd

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bsdiff4 numpy pillow
        shell: cmd

      - name: Configure CMake
        run: |
          cmake -B build\${{ matrix.cmake_preset }} -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DENABLE_PYTHON=ON -DEXPERIMENTAL=ON -DCMAKE_TOOLCHAIN_FILE=C:\vcpkg\scripts\buildsystems\vcpkg.cmake
        shell: cmd

      - name: Build
        run: |
          cmake --build build\${{ matrix.cmake_preset }} --config ${{ matrix.build_type }} --parallel
        shell: cmd

      - name: Run Tests
        run: |
          cd build\${{ matrix.cmake_preset }} && ctest -C ${{ matrix.build_type }} --output-on-failure --parallel 4
        shell: cmd
        continue-on-error: true

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Test Results (Windows MSVC ${{ matrix.build_type }})
          path: |
            build/${{ matrix.cmake_preset }}/Testing/Temporary/*_report.html
            build/${{ matrix.cmake_preset }}/Testing/Temporary/LastTest.log
          if-no-files-found: warn

      - name: Upload Build Artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: pythonscad-windows-msvc-${{ matrix.build_type }}
          path: |
            build/${{ matrix.cmake_preset }}/pythonscad.exe
            build/${{ matrix.cmake_preset }}/pythonscad-python.exe
          if-no-files-found: error
